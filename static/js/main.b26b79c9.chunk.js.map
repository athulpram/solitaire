{"version":3,"sources":["model/stack.js","model/drawStack.js","model/pile.js","model/categorizationBoard.js","model/suitStack.js","model/game.js","card.js","suitStackView.js","model/playingCard.js","model/cardConstants.js","model/deck.js","discardStackView.js","pileView.js","gameView.js","index.js"],"names":["Stack","Object","classCallCheck","this","stack","card","push","cards","concat","pop","slice","console","log","length","DrawStack","drawStack","discardStack","addCard","getLength","removeAllCards","addCards","removeCard","setFaceUP","getTopCard","Pile","pile","cardId","find","getCard","index","findIndex","arrayCard","splice","getRank","topCard","canCategorizeOnTopOf","CategorizationBoard","categorizationPiles","numberOfCards","forEach","map","getData","fromPile","data","pileId","categorizeCard","SuitStack","props","suits","heart","clubs","spade","diamond","array","getLastCardOf","getSuit","canPileOnTopOf","Game","categorizationBoard","suitStack","deck","lodash","shuffle","initialize","i","getTopCardOfDiscradStack","checkCard","searchData","getTopCardOfDiscardStack","undefined","findCard","deleteCardFrom","addCardToPile","COLOR","Card","ev","dataTransfer","setData","cardProps","_this","react_default","a","createElement","className","suit","onDragStart","e","draggable","id","Component","SuitStackView","preventDefault","piles","classname","cardSymbol","PlayingCard","rank","faceUp","otherCard","CARDS","BACK","SPADES","HEARTS","DIAMONDS","CLUBS","SUITS","createDeck","heartCards","diamondCards","spadeCards","clubCards","toConsumableArray","DiscardStackView","card_Card","onClick","changeCard","GameView","possibleConstructorReturn","getPrototypeOf","call","game","startGame","state","discardStackView_DiscardStackView","createCategorizationBoard","getCategorizationData","suitStackView_SuitStackView","getSuitData","updateState","suitStackData","drawData","categorizeData","categorizeBoard","JSON","stringify","setState","rearrangeCard","_this2","onDragOver","onDrop","pileView","class","_this3","onDropFunc","ReactDOM","render","gameView_GameView","document","getElementById"],"mappings":"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","file":"static/js/main.b26b79c9.chunk.js","sourcesContent":["class Stack {\n  constructor() {\n    this.stack = [];\n  }\n\n  addCard(card) {\n    this.stack.push(card);\n  }\n\n  addCards(cards) {\n    this.stack = this.stack.concat(cards);\n  }\n\n  removeCard() {\n    return this.stack.pop();\n  }\n\n  removeAllCards() {\n    const cards = this.stack.slice();\n    this.stack = [];\n    return cards;\n  }\n\n  getTopCard() {\n    console.log(this.stack.length);\n    if (this.stack.length) {\n      return this.stack[this.stack.length - 1];\n    }\n  }\n  getLength() {\n    return this.stack.length;\n  }\n}\n\nexport default Stack;\n","import Stack from \"./stack\";\n\nclass DrawStack {\n  constructor() {\n    this.drawStack = new Stack();\n    this.discardStack = new Stack();\n  }\n\n  addCard(card) {\n    this.drawStack.addCard(card);\n  }\n\n  checkCard() {\n    if (this.drawStack.getLength() <= 0) {\n      const cards = this.discardStack.removeAllCards();\n      this.drawStack.addCards(cards);\n    }\n\n    const card = this.drawStack.removeCard();\n    card.setFaceUP();\n    this.discardStack.addCard(card);\n  }\n\n  selectCardForCategorizing() {\n    return this.discardStack.removeCard();\n  }\n\n  removeCard() {\n    this.discardStack.removeCard();\n  }\n\n  getTopCardOfDiscradStack() {\n    const card = this.discardStack.getTopCard();\n    return card;\n  }\n}\n\nexport default DrawStack;\n","class Pile {\n  constructor() {\n    this.pile = [];\n  }\n\n  addCard(card) {\n    this.pile.push(card);\n  }\n  addCards(cards) {\n    this.pile = cards.slice();\n    this.pile[this.pile.length - 1].setFaceUP();\n  }\n  getData() {\n    return this.pile.slice();\n  }\n  getTopCard() {\n    if (this.pile.length > 1) return this.pile[this.pile.length - 1];\n  }\n\n  getCard(cardId) {\n    if (this.pile.length > 0) {\n      const card = this.pile.find(card => card.getCard() == cardId);\n      if (card) {\n        const index = this.pile.findIndex(arrayCard => arrayCard == card);\n        return this.pile.slice(index);\n      }\n    }\n  }\n  removeCard(cardId) {\n    if (this.pile.length == 0) {\n      return false;\n    }\n    const card = this.pile.find(card => card.getCard() == cardId);\n    if (card) {\n      const index = this.pile.findIndex(arrayCard => arrayCard == card);\n      this.pile.splice(index);\n      if (this.pile.length > 0) {\n        this.pile[this.pile.length - 1].setFaceUP();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  categorizeCard(cards) {\n    if (this.pile.length == 0) {\n      if (cards[0].getRank() == 12) {\n        this.pile = this.pile.concat(cards);\n        return true;\n      }\n      return false;\n    }\n    const topCard = this.pile[this.pile.length - 1];\n\n    if (cards[0].canCategorizeOnTopOf(topCard)) {\n      console.log(\"reached inside\");\n      this.pile = this.pile.concat(cards);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default Pile;\n","import Pile from \"./pile\";\n\nclass CategorizationBoard {\n  constructor() {\n    this.categorizationPiles = [\n      new Pile(),\n      new Pile(),\n      new Pile(),\n      new Pile(),\n      new Pile(),\n      new Pile(),\n      new Pile()\n    ];\n  }\n  initialize(cards) {\n    let numberOfCards = 1;\n    this.categorizationPiles.forEach(pile => {\n      pile.addCards(cards.splice(cards.length - numberOfCards));\n      numberOfCards++;\n    });\n  }\n\n  getData() {\n    return this.categorizationPiles.map(pile => pile.getData());\n  }\n  getCard(cardId) {\n    const searchData = this.categorizationPiles.map((pile, index) => {\n      return { card: pile.getCard(cardId), fromPile: index };\n    });\n\n    return searchData.find(data => data.card);\n  }\n\n  deleteCardFrom(pileId, cardId) {\n    return this.categorizationPiles[pileId].removeCard(cardId);\n  }\n\n  addCardToPile(pileId, cards) {\n    const status = this.categorizationPiles[pileId].categorizeCard(cards);\n    return status;\n  }\n}\n\nexport default CategorizationBoard;\n","export default class SuitStack {\n  constructor(props) {\n    this.suits = {\n      heart: [],\n      clubs: [],\n      spade: [],\n      diamond: []\n    };\n  }\n\n  getLastCardOf(array) {\n    if (array.length != 0) {\n      return array[array.length - 1];\n    }\n  }\n\n  getData() {\n    return [\n      this.getLastCardOf(this.suits.heart),\n      this.getLastCardOf(this.suits.clubs),\n      this.getLastCardOf(this.suits.spade),\n      this.getLastCardOf(this.suits.diamond)\n    ];\n  }\n\n  addCard(card) {\n    if (this.suits[card.getSuit()].length != 0) {\n      if (\n        card.canPileOnTopOf(\n          this.suits[card.getSuit()][this.suits[card.getSuit()].length - 1]\n        )\n      ) {\n        this.suits[card.getSuit()].push(card);\n        return true;\n      }\n      return false;\n    }\n    if (card.getRank() == 0) {\n      this.suits[card.getSuit()].push(card);\n      return true;\n    }\n    return false;\n  }\n}\n","import drawStack from \"./drawStack\";\nimport lodash from \"lodash\";\nimport CategorizationBoard from \"./categorizationBoard\";\nimport SuitStack from \"./suitStack\";\n\nconst CARDS_IN_CATEGORIZATION_BOARD = 28;\n\nclass Game {\n  constructor() {\n    this.drawStack = new drawStack();\n    this.categorizationBoard = new CategorizationBoard();\n    this.suitStack = new SuitStack();\n  }\n\n  startGame(deck) {\n    deck = lodash.shuffle(deck);\n    this.categorizationBoard.initialize(\n      deck.splice(deck.length - CARDS_IN_CATEGORIZATION_BOARD)\n    );\n    for (let i = 0; i < deck.length; i++) {\n      this.drawStack.addCard(deck.pop());\n    }\n  }\n\n  getTopCardOfDiscardStack() {\n    return this.drawStack.getTopCardOfDiscradStack();\n  }\n\n  checkCard() {\n    this.drawStack.checkCard();\n  }\n\n  getCategorizationData() {\n    return this.categorizationBoard.getData();\n  }\n\n  getSuitData() {\n    const data = this.suitStack.getData();\n    return data;\n  }\n\n  findCard(cardId) {\n    let searchData = this.categorizationBoard.getCard(cardId);\n\n    if (!searchData) {\n      searchData = {};\n      searchData.card = [this.getTopCardOfDiscardStack()];\n      searchData.fromPile = undefined;\n    }\n    return searchData;\n  }\n\n  categorizeCard(cardId) {\n    const searchData = this.findCard(cardId);\n    if (searchData.fromPile && searchData.card.length > 1) {\n      return;\n    }\n\n    searchData.card = searchData.card[0];\n\n    if (this.suitStack.addCard(searchData.card)) {\n      if (searchData.fromPile >= 0) {\n        this.categorizationBoard.deleteCardFrom(searchData.fromPile, cardId);\n        return;\n      }\n      searchData.card = this.drawStack.removeCard();\n    }\n  }\n\n  rearrangeCard(pileId, cardId) {\n    const searchData = this.findCard(cardId);\n    const status = this.categorizationBoard.addCardToPile(\n      pileId,\n      searchData.card\n    );\n    if (status) {\n      if (searchData.fromPile >= 0) {\n        this.categorizationBoard.deleteCardFrom(searchData.fromPile, cardId);\n        return;\n      }\n      searchData.card = this.drawStack.removeCard();\n    }\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nconst COLOR = {\n  heart: \"playing-card-red\",\n  spade: \"playing-card-black\",\n  clubs: \"playing-card-black\",\n  diamond: \"playing-card-red\"\n};\n\nexport default class Card extends Component {\n  onDragStart(ev) {\n    ev.dataTransfer.setData(\"id\", this.props.cardProps.card);\n  }\n  render() {\n    return (\n      <div\n        className={COLOR[this.props.cardProps.suit]}\n        onDragStart={e => this.onDragStart(e)}\n        draggable={this.props.cardProps.card !== \"\\uD83C\\uDCA0\"}\n        id={this.props.cardProps.card}\n      >\n        <span className=\"symbol-span\">{this.props.cardProps.card}</span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\nconst COLOR = {\n  heart: \"playing-card-red\",\n  spade: \"playing-card-black\",\n  clubs: \"playing-card-black\",\n  diamond: \"playing-card-red\"\n};\n\nexport default class SuitStackView extends Component {\n  onDropFunc(e) {\n    e.preventDefault();\n  }\n  onDragOver() {}\n  render() {\n    const cards = this.props.piles.map(card => {\n      let classname = COLOR.spade;\n      let cardSymbol = \"\\uD83C\\uDCA0\";\n\n      if (card) {\n        classname = card.suit ? COLOR[card.suit] : COLOR.spade;\n\n        cardSymbol = card.card ? card.card : \"\\uD83C\\uDCA0\";\n      }\n\n      return (\n        <div className={classname}>\n          <span>{cardSymbol}</span>\n        </div>\n      );\n    });\n    return <div className=\"suit-stack\">{cards}</div>;\n  }\n}\n","const COLOR = {\n  heart: \"red\",\n  clubs: \"black\",\n  spade: \"black\",\n  diamond: \"red\"\n};\n\nclass PlayingCard {\n  constructor(card, suit, rank) {\n    this.card = card;\n    this.suit = suit;\n    this.rank = rank;\n    this.faceUp = false;\n  }\n\n  getCard() {\n    if (this.faceUp) {\n      return this.card;\n    }\n    return \"\\uD83C\\uDCA0\";\n  }\n\n  canCategorizeOnTopOf(otherCard) {\n    if (\n      this.rank === otherCard.rank - 1 &&\n      COLOR[this.suit] != COLOR[otherCard.suit]\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canPileOnTopOf(otherCard) {\n    if (this.suit === otherCard.suit && this.rank === otherCard.rank + 1) {\n      return true;\n    }\n    return true;\n  }\n\n  getSuit() {\n    if (this.faceUp) {\n      return this.suit;\n    }\n    return \"spade\";\n  }\n\n  getRank() {\n    return this.rank;\n  }\n\n  isFaceUp() {\n    return this.faceUp;\n  }\n  setFaceUP() {\n    this.faceUp = true;\n  }\n  setFaceDown() {\n    this.faceUp = false;\n  }\n}\n\nexport default PlayingCard;\n","const CARDS = {\n  BACK: \"\\uD83C\\uDCA0\",\n  SPADES: [\n    \"\\u{1F0A1}\",\n    \"\\u{1F0A2}\",\n    \"\\u{1F0A3}\",\n    \"\\u{1F0A4}\",\n    \"\\u{1F0A5}\",\n    \"\\u{1F0A6}\",\n    \"\\u{1F0A7}\",\n    \"\\u{1F0A8}\",\n    \"\\u{1F0A9}\",\n    \"\\u{1F0AA}\",\n    \"\\u{1F0AB}\",\n    \"\\u{1F0AD}\",\n    \"\\u{1F0AE}\"\n  ],\n  HEARTS: [\n    \"\\u{1F0B1}\",\n    \"\\u{1F0B2}\",\n    \"\\u{1F0B3}\",\n    \"\\u{1F0B4}\",\n    \"\\u{1F0B5}\",\n    \"\\u{1F0B6}\",\n    \"\\u{1F0B7}\",\n    \"\\u{1F0B8}\",\n    \"\\u{1F0B9}\",\n    \"\\u{1F0BA}\",\n    \"\\u{1F0BB}\",\n    \"\\u{1F0BD}\",\n    \"\\u{1F0BE}\"\n  ],\n  DIAMONDS: [\n    \"\\u{1F0C1}\",\n    \"\\u{1F0C2}\",\n    \"\\u{1F0C3}\",\n    \"\\u{1F0C4}\",\n    \"\\u{1F0C5}\",\n    \"\\u{1F0C6}\",\n    \"\\u{1F0C7}\",\n    \"\\u{1F0C8}\",\n    \"\\u{1F0C9}\",\n    \"\\u{1F0CA}\",\n    \"\\u{1F0CB}\",\n    \"\\u{1F0CD}\",\n    \"\\u{1F0CE}\"\n  ],\n  CLUBS: [\n    \"\\u{1F0D1}\",\n    \"\\u{1F0D2}\",\n    \"\\u{1F0D3}\",\n    \"\\u{1F0D4}\",\n    \"\\u{1F0D5}\",\n    \"\\u{1F0D6}\",\n    \"\\u{1F0D7}\",\n    \"\\u{1F0D8}\",\n    \"\\u{1F0D9}\",\n    \"\\u{1F0DA}\",\n    \"\\u{1F0DB}\",\n    \"\\u{1F0DD}\",\n    \"\\u{1F0DE}\"\n  ]\n};\n\nexport default CARDS;\n","import PlayingCard from './playingCard';\nimport CARDS from \"./cardConstants\";\n\nconst SUITS = {\n    HEART : \"heart\",\n    CLUBS : \"clubs\",\n    SPADE : \"spade\",\n    DIAMOND : \"diamond\"\n}\n\nconst heartSuit = function(){\n    const cardSymbols = CARDS.HEARTS;\n    return cardSymbols.map((card,rank)=>new PlayingCard(card,SUITS.HEART,rank));\n}\n\nconst diamondSuit = function(){\n    const cardSymbols = CARDS.DIAMONDS;\n    return cardSymbols.map((card, rank) => new PlayingCard(card, SUITS.DIAMOND, rank));\n}\n\nconst spadeSuit = function(){\n    const cardSymbols = CARDS.SPADES;\n    return cardSymbols.map((card, rank) => new PlayingCard(card, SUITS.SPADE, rank))\n}\n\nconst clubSuit = function(){\n    const cardSymbols = CARDS.CLUBS;\n    return cardSymbols.map((card, rank) => new PlayingCard(card, SUITS.CLUBS, rank))\n}\n\nconst createDeck = function(){\n    const heartCards = heartSuit();\n    const diamondCards = diamondSuit();\n    const spadeCards = spadeSuit();\n    const clubCards = clubSuit();\n\n    return [...heartCards,...diamondCards,...spadeCards,...clubCards];\n}\n\nexport default createDeck;","import React, { Component } from \"react\";\nimport CARDS from \"./model/cardConstants\";\nimport Card from \"./card\";\n\nexport default class DiscardStackView extends Component {\n  changeCard() {}\n  render() {\n    let topCard = \"\";\n    if (this.props.topCard) {\n      topCard = (\n        <Card\n          cardProps={{\n            card: this.props.topCard.getCard(),\n            suit: this.props.topCard.getSuit()\n          }}\n        />\n      );\n    }\n    return (\n      <div className={\"discard-stack-set\"}>\n        <div onClick={this.changeCard}>\n          <Card cardProps={{ suit: \"spade\", card: CARDS.BACK }} />\n        </div>\n        {topCard}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Card from \"./card\";\n\nconst Pile = function(props) {\n  const cards = props.cards.map(card => {\n    return <Card cardProps={{ card: card.getCard(), suit: card.getSuit() }} />;\n  });\n  return <div className=\"categorizing-pile\">{cards}</div>;\n};\n\nexport default Pile;\n","import Game from \"./model/game\";\nimport React, { Component } from \"react\";\nimport SuitStackView from \"./suitStackView\";\nimport createDeck from \"./model/deck\";\nimport DiscardStackView from \"./discardStackView\";\nimport Pile from \"./pileView\";\n\nexport default class GameView extends Component {\n  constructor(props) {\n    super(props);\n    const deck = createDeck();\n    this.game = new Game();\n\n    this.game.startGame(deck);\n    this.game.checkCard();\n\n    this.state = {\n      discardStack: (\n        <DiscardStackView topCard={this.game.getTopCardOfDiscardStack()} />\n      ),\n      categorizationBoard: this.createCategorizationBoard(\n        this.game.getCategorizationData()\n      ),\n      suitStack: <SuitStackView piles={this.game.getSuitData()} />\n    };\n  }\n  componentDidMount() {}\n\n  changeCard() {\n    this.game.checkCard();\n    this.updateState();\n  }\n\n  updateState() {\n    const suitStackData = this.game.getSuitData();\n    const drawData = this.game.getTopCardOfDiscardStack();\n    const categorizeData = this.game.getCategorizationData();\n    const categorizeBoard = this.createCategorizationBoard(categorizeData);\n\n    console.log(\"this sadkfdf\" + JSON.stringify(drawData));\n\n    const state = {\n      discardStack: <DiscardStackView topCard={drawData} />,\n      categorizationBoard: categorizeBoard,\n      suitStack: <SuitStackView piles={suitStackData} />\n    };\n    this.setState(state);\n  }\n\n  onDragOver(e) {\n    e.preventDefault();\n  }\n  onDropFunc(e) {\n    const cardId = e.dataTransfer.getData(\"id\");\n    this.game.categorizeCard(cardId);\n    this.updateState();\n  }\n\n  categorizeCard(pileId, e) {\n    const cardId = e.dataTransfer.getData(\"id\");\n\n    this.game.rearrangeCard(pileId, cardId);\n    this.updateState();\n  }\n\n  createCategorizationBoard(categorizeData) {\n    console.log(\"categorize data ..... \" + JSON.stringify(categorizeData));\n    const piles = categorizeData.map((pile, index) => {\n      return (\n        <div\n          onDragOver={e => {\n            this.onDragOver(e);\n          }}\n          onDrop={e => {\n            this.categorizeCard(index, e);\n          }}\n          className=\"categorize-pile\"\n        >\n          <Pile cards={pile} />\n        </div>\n      );\n    });\n\n    return <div class=\"categorization-board\">{piles}</div>;\n  }\n\n  render() {\n    return (\n      <div class=\"game-view\">\n        <div className=\"top-half-game-board\">\n          <div onClick={e => this.changeCard(e)}>{this.state.discardStack}</div>\n          <div class=\"heading-div\">\n            <span>Solitare</span>\n          </div>\n          <div\n            onDragOver={e => {\n              this.onDragOver(e);\n            }}\n            onDrop={e => {\n              this.onDropFunc(e);\n            }}\n          >\n            {this.state.suitStack}\n          </div>\n        </div>\n        {this.state.categorizationBoard}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GameView from './gameView';\n\nReactDOM.render(<GameView />, document.getElementById(\"root\"));\n"],"sourceRoot":""}